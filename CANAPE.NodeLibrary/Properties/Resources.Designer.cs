//    CANAPE Network Testing Tool
//    Copyright (C) 2014 Context Information Security
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CANAPE.NodeLibrary.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CANAPE.NodeLibrary.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parses an ASN1 DER byte stream into separate objects and decodes the results.
        /// </summary>
        internal static string Asn1Parser_Description {
            get {
                return ResourceManager.GetString("Asn1Parser_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASN1 Parser.
        /// </summary>
        internal static string Asn1Parser_Name {
            get {
                return ResourceManager.GetString("Asn1Parser_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASN1 Parser.
        /// </summary>
        internal static string Asn1Parser_NodeName {
            get {
                return ResourceManager.GetString("Asn1Parser_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore sequences and leave as DER encoded bytes.
        /// </summary>
        internal static string Asn1ParserConfig_IgnoreSequencesDescription {
            get {
                return ResourceManager.GetString("Asn1ParserConfig_IgnoreSequencesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore sets and leave as DER encoded bytes.
        /// </summary>
        internal static string Asn1ParserConfig_IgnoreSetsDescription {
            get {
                return ResourceManager.GetString("Asn1ParserConfig_IgnoreSetsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore tagged objects and leave as DER encoded bytes.
        /// </summary>
        internal static string Asn1ParserConfig_IgnoreTaggedObjectsDescription {
            get {
                return ResourceManager.GetString("Asn1ParserConfig_IgnoreTaggedObjectsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not decode leaf values leave as DER encoded bytes.
        /// </summary>
        internal static string Asn1ParserConfig_NoDecodeDescription {
            get {
                return ResourceManager.GetString("Asn1ParserConfig_NoDecodeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not verify the ASN1 objects before serializing back to bytes in sequences, sets and tagged objects.
        /// </summary>
        internal static string Asn1ParserConfig_NoVerifyDescription {
            get {
                return ResourceManager.GetString("Asn1ParserConfig_NoVerifyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzzing {0} points.
        /// </summary>
        internal static string BaseRandomArrayFuzzer_FuzzCount {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzer_FuzzCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzzing position {0} original {1} new {2}.
        /// </summary>
        internal static string BaseRandomArrayFuzzer_FuzzInfo {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzer_FuzzInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring node {0}, cannot convert to correct type.
        /// </summary>
        internal static string BaseRandomArrayFuzzer_IgnoringData {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzer_IgnoringData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Post-fuzz.
        /// </summary>
        internal static string BaseRandomArrayFuzzer_PostFuzzInfo {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzer_PostFuzzInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Pre-fuzz.
        /// </summary>
        internal static string BaseRandomArrayFuzzer_PreFuzzInfo {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzer_PreFuzzInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_ColorDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the way in which bytes are modified when fuzzing. If Random then will choose one of the other methods.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_CombinationModeDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_CombinationModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means array.length - fuzzlength + 1.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting byte position to fuzz.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed bytes should be logged as text.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of points to fuzz in the binary, if 0 then the max is the length of the packet.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_MaxFuzzPointsDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_MaxFuzzPointsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then will generate a random number of fuzz bytes to change, otherwise will generate exact number.
        /// </summary>
        internal static string BaseRandomArrayFuzzerConfig_RandomFuzzPointCountDescription {
            get {
                return ResourceManager.GetString("BaseRandomArrayFuzzerConfig_RandomFuzzPointCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the encoding to use if the nodes are not strings.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_BinaryEncodingDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_BinaryEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is casesensitive.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_CaseSensitiveDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_CaseSensitiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means string.length - fuzzlength + 1.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting string position to fuzz.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed value should be logged as text.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the maximum number of replacements when using a regular expression, -1 means all.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_MaxReplacementsDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_MaxReplacementsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is multiline.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_MultilineDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_MultilineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to strings for fuzzing, just ignore them.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a regex match to use to determine parts to fuzz. Replaces any matches within the selected range.
        /// </summary>
        internal static string BaseStringFuzzerNodeConfig_RegexMatchDescription {
            get {
                return ResourceManager.GetString("BaseStringFuzzerNodeConfig_RegexMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to fuzz binary part using an incrementing value.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_Description {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increment cannot be 0.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_InvalidIncrement {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_InvalidIncrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length must be between 1 and 8 bytes.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_InvalidLength {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary Integer Fuzzer Node.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_Name {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum value must be less than minimum for negative increments.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_NegativeInvalidMaxValue {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_NegativeInvalidMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary Integer Fuzzer.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum value must be greater than minimum for positive increments.
        /// </summary>
        internal static string BinaryIntegerFuzzerNode_PositiveInvalidMaxValue {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNode_PositiveInvalidMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, must be between 1 and 8 bytes.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting byte position to fuzz.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The increment value.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_IncrementDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_IncrementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify whether the integer is little endian or big.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_LittleEndianDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_LittleEndianDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed bytes should be logged as text.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum integer value.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_MaxValueDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_MaxValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum integer value.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_MinValueDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_MinValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to byte arrays for fuzzing, just ignore them.
        /// </summary>
        internal static string BinaryIntegerFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("BinaryIntegerFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to replace values based on a binary match.
        /// </summary>
        internal static string BinaryMutatorNode_Description {
            get {
                return ResourceManager.GetString("BinaryMutatorNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary Mutator Node.
        /// </summary>
        internal static string BinaryMutatorNode_Name {
            get {
                return ResourceManager.GetString("BinaryMutatorNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary Mutator.
        /// </summary>
        internal static string BinaryMutatorNode_NodeName {
            get {
                return ResourceManager.GetString("BinaryMutatorNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array of bytes to match.
        /// </summary>
        internal static string BinaryMutatorNodeConfig_MatchDescription {
            get {
                return ResourceManager.GetString("BinaryMutatorNodeConfig_MatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array of bytes to replace the match with.
        /// </summary>
        internal static string BinaryMutatorNodeConfig_ReplacementDescription {
            get {
                return ResourceManager.GetString("BinaryMutatorNodeConfig_ReplacementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates a pre and post adjustment value in bytes to the length to account for uncounted fields.
        /// </summary>
        internal static string BinaryVectorConfig_AdjustmentDescription {
            get {
                return ResourceManager.GetString("BinaryVectorConfig_AdjustmentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the length field&apos;s size is included in the field.
        /// </summary>
        internal static string BinaryVectorConfig_InclusiveDescription {
            get {
                return ResourceManager.GetString("BinaryVectorConfig_InclusiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of length variable to read.
        /// </summary>
        internal static string BinaryVectorConfig_LengthTypeDescription {
            get {
                return ResourceManager.GetString("BinaryVectorConfig_LengthTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True to read as Little Endian, false for Big Endian.
        /// </summary>
        internal static string BinaryVectorConfig_LittleEndianDescription {
            get {
                return ResourceManager.GetString("BinaryVectorConfig_LittleEndianDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the data has a fixed prefix then specify how many bytes there are.
        /// </summary>
        internal static string BinaryVectorConfig_PrefixLenDescription {
            get {
                return ResourceManager.GetString("BinaryVectorConfig_PrefixLenDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of bytes per item.
        /// </summary>
        internal static string BinaryVectorConfig_StrideDescription {
            get {
                return ResourceManager.GetString("BinaryVectorConfig_StrideDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parses a length field and reads the required byte length.
        /// </summary>
        internal static string BinaryVectorParser_Description {
            get {
                return ResourceManager.GetString("BinaryVectorParser_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary Vector Parser.
        /// </summary>
        internal static string BinaryVectorParser_Name {
            get {
                return ResourceManager.GetString("BinaryVectorParser_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vector.
        /// </summary>
        internal static string BinaryVectorParser_NodeName {
            get {
                return ResourceManager.GetString("BinaryVectorParser_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring node {0}, not a byte value.
        /// </summary>
        internal static string ByteFuzzer_IgnoringNode {
            get {
                return ResourceManager.GetString("ByteFuzzer_IgnoringNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple DNS server.
        /// </summary>
        internal static string DnsDataServer_Description {
            get {
                return ResourceManager.GetString("DnsDataServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple DNS Server.
        /// </summary>
        internal static string DnsDataServer_Name {
            get {
                return ResourceManager.GetString("DnsDataServer_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS Server.
        /// </summary>
        internal static string DnsDataServer_NodeName {
            get {
                return ResourceManager.GetString("DnsDataServer_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respond to all AAAA requests with this IP address. Setting to :: disables.
        /// </summary>
        internal static string DnsDataServerConfig_ResponseAddress6Description {
            get {
                return ResourceManager.GetString("DnsDataServerConfig_ResponseAddress6Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respond to all A requests with this IP address. Setting to 0.0.0.0 disables..
        /// </summary>
        internal static string DnsDataServerConfig_ResponseAddressDescription {
            get {
                return ResourceManager.GetString("DnsDataServerConfig_ResponseAddressDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a string which indicates a reverse name when requesting PTR records.
        /// </summary>
        internal static string DnsDataServerConfig_ReverseDnsDescription {
            get {
                return ResourceManager.GetString("DnsDataServerConfig_ReverseDnsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the response TTL.
        /// </summary>
        internal static string DnsDataServerConfig_TimeToLiveDescription {
            get {
                return ResourceManager.GetString("DnsDataServerConfig_TimeToLiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a array parser for DNS packets.
        /// </summary>
        internal static string DNSParser_Description {
            get {
                return ResourceManager.GetString("DNSParser_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS Parser.
        /// </summary>
        internal static string DNSParser_Name {
            get {
                return ResourceManager.GetString("DNSParser_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS Parser.
        /// </summary>
        internal static string DNSParser_NodeName {
            get {
                return ResourceManager.GetString("DNSParser_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to duplicate all incoming packets a set number of times.
        /// </summary>
        internal static string DuplicatorNode_Description {
            get {
                return ResourceManager.GetString("DuplicatorNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicator Node.
        /// </summary>
        internal static string DuplicatorNode_Name {
            get {
                return ResourceManager.GetString("DuplicatorNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicator.
        /// </summary>
        internal static string DuplicatorNode_NodeName {
            get {
                return ResourceManager.GetString("DuplicatorNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of times to duplicate the matching packet, 0 means the packet will be discarded.
        /// </summary>
        internal static string DuplicatorNodeConfig_DuplicationCount {
            get {
                return ResourceManager.GetString("DuplicatorNodeConfig_DuplicationCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple endpoint which echos its input.
        /// </summary>
        internal static string EchoDataEndpoint_Description {
            get {
                return ResourceManager.GetString("EchoDataEndpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Echo Endpoint.
        /// </summary>
        internal static string EchoDataEndpoint_Name {
            get {
                return ResourceManager.GetString("EchoDataEndpoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Echo Endpoint.
        /// </summary>
        internal static string EchoDataEndpoint_NodeName {
            get {
                return ResourceManager.GetString("EchoDataEndpoint_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then echo packets are converted back to a basic byte form before sending.
        /// </summary>
        internal static string EchoDataEndpointConfig_ConvertToBasicDescription {
            get {
                return ResourceManager.GetString("EchoDataEndpointConfig_ConvertToBasicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to filter out packets based on specific filters.
        /// </summary>
        internal static string FilterNode_Description {
            get {
                return ResourceManager.GetString("FilterNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter Node.
        /// </summary>
        internal static string FilterNode_Name {
            get {
                return ResourceManager.GetString("FilterNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter.
        /// </summary>
        internal static string FilterNode_NodeName {
            get {
                return ResourceManager.GetString("FilterNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to filter out specific nodes of a frame.
        /// </summary>
        internal static string FrameFilterMutatorNode_Description {
            get {
                return ResourceManager.GetString("FrameFilterMutatorNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frame Filter Mutator Node.
        /// </summary>
        internal static string FrameFilterMutatorNode_Name {
            get {
                return ResourceManager.GetString("FrameFilterMutatorNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frame Filter Mutator.
        /// </summary>
        internal static string FrameFilterMutatorNode_NodeName {
            get {
                return ResourceManager.GetString("FrameFilterMutatorNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parser for HTTP style cookie strings. Make sure to specify the nodes to parse when configuring the graph.
        /// </summary>
        internal static string HTTPCookieParser_Description {
            get {
                return ResourceManager.GetString("HTTPCookieParser_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Cookie Parser.
        /// </summary>
        internal static string HTTPCookieParser_Name {
            get {
                return ResourceManager.GetString("HTTPCookieParser_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cookie Parser.
        /// </summary>
        internal static string HTTPCookieParser_NodeName {
            get {
                return ResourceManager.GetString("HTTPCookieParser_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple HTTP server.
        /// </summary>
        internal static string HttpDataServer_Description {
            get {
                return ResourceManager.GetString("HttpDataServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple HTTP Server.
        /// </summary>
        internal static string HttpDataServer_Name {
            get {
                return ResourceManager.GetString("HttpDataServer_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Server.
        /// </summary>
        internal static string HttpDataServer_NodeName {
            get {
                return ResourceManager.GetString("HttpDataServer_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the connection should be closed after sending.
        /// </summary>
        internal static string HttpDataServerConfig_CloseAfterSendingDescription {
            get {
                return ResourceManager.GetString("HttpDataServerConfig_CloseAfterSendingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the content type for the valid data.
        /// </summary>
        internal static string HttpDataServerConfig_ContentTypeDescription {
            get {
                return ResourceManager.GetString("HttpDataServerConfig_ContentTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A glob string to match the path against, if it matches then sends the contents, otherwise it sends the 404.
        /// </summary>
        internal static string HttpDataServerConfig_HttpPathDescription {
            get {
                return ResourceManager.GetString("HttpDataServerConfig_HttpPathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response data to send if the HttpPath does not match.
        /// </summary>
        internal static string HttpDataServerConfig_NotFoundResponseDataDescription {
            get {
                return ResourceManager.GetString("HttpDataServerConfig_NotFoundResponseDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response data to send if the HttpPath matches.
        /// </summary>
        internal static string HttpDataServerConfig_ValidResponseDataDescription {
            get {
                return ResourceManager.GetString("HttpDataServerConfig_ValidResponseDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a HTTP request parser to apply to a stream.
        /// </summary>
        internal static string HttpRequestStreamParser_Description {
            get {
                return ResourceManager.GetString("HttpRequestStreamParser_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Request Parser.
        /// </summary>
        internal static string HttpRequestStreamParser_Name {
            get {
                return ResourceManager.GetString("HttpRequestStreamParser_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Request.
        /// </summary>
        internal static string HttpRequestStreamParser_NodeName {
            get {
                return ResourceManager.GetString("HttpRequestStreamParser_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a HTTP response parser to apply to a stream.
        /// </summary>
        internal static string HttpResponseStreamParser_Description {
            get {
                return ResourceManager.GetString("HttpResponseStreamParser_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Response Parser.
        /// </summary>
        internal static string HttpResponseStreamParser_Name {
            get {
                return ResourceManager.GetString("HttpResponseStreamParser_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Response.
        /// </summary>
        internal static string HttpResponseStreamParser_NodeName {
            get {
                return ResourceManager.GetString("HttpResponseStreamParser_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to inject packets into the network from a packet log when the node filters match.
        /// </summary>
        internal static string InjectorNode_Description {
            get {
                return ResourceManager.GetString("InjectorNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Injector Node.
        /// </summary>
        internal static string InjectorNode_Name {
            get {
                return ResourceManager.GetString("InjectorNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Injector.
        /// </summary>
        internal static string InjectorNode_NodeName {
            get {
                return ResourceManager.GetString("InjectorNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the triggering packet is droppped.
        /// </summary>
        internal static string InjectorNodeConfig_DropTrigger {
            get {
                return ResourceManager.GetString("InjectorNodeConfig_DropTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log of packets to inject from.
        /// </summary>
        internal static string InjectorNodeConfig_PacketLog {
            get {
                return ResourceManager.GetString("InjectorNodeConfig_PacketLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true sends the packets before the triggering packet.
        /// </summary>
        internal static string InjectorNodeConfig_Prefix {
            get {
                return ResourceManager.GetString("InjectorNodeConfig_Prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the packets will be resent each time the node fires, otherwise it will stop.
        /// </summary>
        internal static string InjectorNodeConfig_Repeat {
            get {
                return ResourceManager.GetString("InjectorNodeConfig_Repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then each packet in the log is sent everytime the node fires, otherwise it sends all packets.
        /// </summary>
        internal static string InjectorNodeConfig_Sequential {
            get {
                return ResourceManager.GetString("InjectorNodeConfig_Sequential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to log packets to a packet log document instead of to the current service.
        /// </summary>
        internal static string LogToPacketLogNode_Description {
            get {
                return ResourceManager.GetString("LogToPacketLogNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log To Packet Log Node.
        /// </summary>
        internal static string LogToPacketLogNode_Name {
            get {
                return ResourceManager.GetString("LogToPacketLogNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packet Log.
        /// </summary>
        internal static string LogToPacketLogNode_NodeName {
            get {
                return ResourceManager.GetString("LogToPacketLogNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a packet log.
        /// </summary>
        internal static string LogToPacketLogNode_PacketLogIsNull {
            get {
                return ResourceManager.GetString("LogToPacketLogNode_PacketLogIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colour of logged packet.
        /// </summary>
        internal static string LogToPacketLogNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("LogToPacketLogNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert packet to bytes before logging.
        /// </summary>
        internal static string LogToPacketLogNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("LogToPacketLogNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The packet log to log packets to.
        /// </summary>
        internal static string LogToPacketLogNodeConfig_PacketLogDescription {
            get {
                return ResourceManager.GetString("LogToPacketLogNodeConfig_PacketLogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag to apply to packets.
        /// </summary>
        internal static string LogToPacketLogNodeConfig_TagDescription {
            get {
                return ResourceManager.GetString("LogToPacketLogNodeConfig_TagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple server which discards its input.
        /// </summary>
        internal static string NullDataEndpoint_Description {
            get {
                return ResourceManager.GetString("NullDataEndpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null Server.
        /// </summary>
        internal static string NullDataEndpoint_Name {
            get {
                return ResourceManager.GetString("NullDataEndpoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null Server.
        /// </summary>
        internal static string NullDataEndpoint_NodeName {
            get {
                return ResourceManager.GetString("NullDataEndpoint_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to fuzz parts of a string with an incrementing value.
        /// </summary>
        internal static string NumericStringFuzzerNode_Description {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increment cannot be zero.
        /// </summary>
        internal static string NumericStringFuzzerNode_InvalidIncrement {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_InvalidIncrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If negative increment end value must be less than start.
        /// </summary>
        internal static string NumericStringFuzzerNode_InvalidNegativeIncrement {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_InvalidNegativeIncrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If positive increment end value must be greater than start.
        /// </summary>
        internal static string NumericStringFuzzerNode_InvalidPositiveIncrement {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_InvalidPositiveIncrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid string format.
        /// </summary>
        internal static string NumericStringFuzzerNode_InvalidStringFormat {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_InvalidStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Numeric String Fuzzer Node.
        /// </summary>
        internal static string NumericStringFuzzerNode_Name {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Numeric String Fuzzer.
        /// </summary>
        internal static string NumericStringFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the encoding to use if the nodes are not strings.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_BinaryEncodingDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_BinaryEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is casesensitive.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_CaseSensitiveDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_CaseSensitiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a custom .NET format string for the value.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_CustomFormatDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_CustomFormatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the ending value for the fuzz.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_EndValueDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_EndValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify basic format, unless CustomFormat is specified.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_FormatDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_FormatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means string.length - fuzzlength + 1.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting string position to fuzz.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the increment between values.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_IncrementDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_IncrementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed value should be logged as text.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the maximum number of replacements when using a regular expression, -1 means all.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_MaxReplacementsDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_MaxReplacementsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is multiline.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_MultilineDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_MultilineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to strings for fuzzing, just ignore them.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a regex match to use to determine parts to fuzz. Replaces any matches within the selected range.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_RegexMatchDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_RegexMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting value for the fuzz.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_StartValueDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_StartValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store the current fuzz position as a local value, it will not persist between connections.
        /// </summary>
        internal static string NumericStringFuzzerNodeConfig_StoreLocalPositionDescription {
            get {
                return ResourceManager.GetString("NumericStringFuzzerNodeConfig_StoreLocalPositionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to fuzz parts of a string with patterned data.
        /// </summary>
        internal static string PatternStringFuzzerNode_Description {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MinLength must be greater than 0 and MaxLength must be greater or equal.
        /// </summary>
        internal static string PatternStringFuzzerNode_InvalidLength {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNode_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify an empty pattern.
        /// </summary>
        internal static string PatternStringFuzzerNode_InvalidPattern {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNode_InvalidPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern String Fuzzer Node.
        /// </summary>
        internal static string PatternStringFuzzerNode_Name {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern String Fuzzer.
        /// </summary>
        internal static string PatternStringFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the encoding to use if the nodes are not strings.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_BinaryEncodingDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_BinaryEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is casesensitive.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_CaseSensitiveDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_CaseSensitiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the string is just a fixed length string at MaxLength.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_FixedLengthDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_FixedLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means string.length - fuzzlength + 1.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting string position to fuzz.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed value should be logged as text.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum length of fuzz string.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_MaxLengthDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_MaxLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the maximum number of replacements when using a regular expression, -1 means all.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_MaxReplacementsDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_MaxReplacementsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum length of fuzz string.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_MinLengthDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_MinLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is multiline.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_MultilineDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_MultilineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to strings for fuzzing, just ignore them.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the the string pattern to use.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_PatternDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_PatternDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a regex match to use to determine parts to fuzz. Replaces any matches within the selected range.
        /// </summary>
        internal static string PatternStringFuzzerNodeConfig_RegexMatchDescription {
            get {
                return ResourceManager.GetString("PatternStringFuzzerNodeConfig_RegexMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to randomly fuzz bit parts of packets.
        /// </summary>
        internal static string RandomBitFuzzerNode_Description {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random Bit Fuzzer Node.
        /// </summary>
        internal static string RandomBitFuzzerNode_Name {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit Fuzzer.
        /// </summary>
        internal static string RandomBitFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the way in which bytes are modified when fuzzing. If Random then will choose one of the other methods.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_CombinationModeDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_CombinationModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means array.length - fuzzlength + 1.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting byte position to fuzz.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed bytes should be logged as text.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of points to fuzz in the binary, if 0 then the max is the length of the packet.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_MaxFuzzPointsDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_MaxFuzzPointsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to byte arrays for fuzzing, just ignore them.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then will generate a random number of fuzz bytes to change, otherwise will generate exact number.
        /// </summary>
        internal static string RandomBitFuzzerNodeConfig_RandomFuzzPointCountDescription {
            get {
                return ResourceManager.GetString("RandomBitFuzzerNodeConfig_RandomFuzzPointCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max byte value must be greater than minimum.
        /// </summary>
        internal static string RandomByteFuzzerNode_ConfigError {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNode_ConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to randomly fuzz binary parts of packets.
        /// </summary>
        internal static string RandomByteFuzzerNode_Description {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random Byte Fuzzer Node.
        /// </summary>
        internal static string RandomByteFuzzerNode_Name {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Byte Fuzzer.
        /// </summary>
        internal static string RandomByteFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the way in which bytes are modified when fuzzing. If Random then will choose one of the other methods.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_CombinationModeDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_CombinationModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means array.length - fuzzlength + 1.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting byte position to fuzz.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed bytes should be logged as text.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified the maximum byte value to use for fuzzing.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_MaxByteValueDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_MaxByteValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of points to fuzz in the binary, if 0 then the max is the length of the packet.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_MaxFuzzPointsDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_MaxFuzzPointsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the minimum byte value to use for fuzzing.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_MinByteValueDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_MinByteValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to byte arrays for fuzzing, just ignore them.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then will generate a random number of fuzz bytes to change, otherwise will generate exact number.
        /// </summary>
        internal static string RandomByteFuzzerNodeConfig_RandomFuzzPointCountDescription {
            get {
                return ResourceManager.GetString("RandomByteFuzzerNodeConfig_RandomFuzzPointCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the way in which bytes are modified when fuzzing. If Random then will choose one of the other methods.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_CombinationModeDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_CombinationModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means array.length - fuzzlength + 1.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting byte position to fuzz.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed bytes should be logged as text.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of points to fuzz in the binary, if 0 then the max is the length of the packet.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_MaxFuzzPointsDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_MaxFuzzPointsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified the maximum char value to use for fuzzing.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_MaxValueDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_MaxValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the minimum char value to use for fuzzing.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_MinValueDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_MinValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to byte arrays for fuzzing, just ignore them.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then will generate a random number of fuzz bytes to change, otherwise will generate exact number.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_RandomFuzzPointCountDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_RandomFuzzPointCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the text encoding to use if the node is not a string/char array.
        /// </summary>
        internal static string RandomCharArrayFuzzerNodeConfig_StringEncodingDescription {
            get {
                return ResourceManager.GetString("RandomCharArrayFuzzerNodeConfig_StringEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to generate random length strings.
        /// </summary>
        internal static string RandomLengthStringFuzzerNode_Description {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random Length String Fuzzer Node.
        /// </summary>
        internal static string RandomLengthStringFuzzerNode_Name {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String Length Fuzzer.
        /// </summary>
        internal static string RandomLengthStringFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to append the fuzz case to the end of the existing string.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_AppendFuzzDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_AppendFuzzDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum length of fuzz string.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_MaxLengthDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_MaxLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Mode is RandomCharacters this is the maximum character number allowed.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_MaxRandomCharDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_MaxRandomCharDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum length of fuzz string.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_MinLengthDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_MinLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Mode is RandomCharacters this is the minimum character number allowed.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_MinRandomCharDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_MinRandomCharDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How the fuzzer should generate the characters.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_ModeDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_ModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Mode is RepeatingPattern this is the string pattern to use.
        /// </summary>
        internal static string RandomLengthStringFuzzerNodeConfig_PatternDescription {
            get {
                return ResourceManager.GetString("RandomLengthStringFuzzerNodeConfig_PatternDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to fuzz parts of a string with random data.
        /// </summary>
        internal static string RandomStringFuzzerNode_Description {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random String Fuzzer Node.
        /// </summary>
        internal static string RandomStringFuzzerNode_Name {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random String Fuzzer.
        /// </summary>
        internal static string RandomStringFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the encoding to use if the nodes are not strings.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_BinaryEncodingDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_BinaryEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is casesensitive.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_CaseSensitiveDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_CaseSensitiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the string is just a fixed length string at MaxLength.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_FixedLengthDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_FixedLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means string.length - fuzzlength + 1.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting string position to fuzz.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed value should be logged as text.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum length of fuzz string.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_MaxLengthDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_MaxLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the maximum character number allowed.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_MaxRandomCharDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_MaxRandomCharDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the maximum number of replacements when using a regular expression, -1 means all.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_MaxReplacementsDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_MaxReplacementsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum length of fuzz string.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_MinLengthDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_MinLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the the minimum character number allowed.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_MinRandomCharDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_MinRandomCharDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is multiline.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_MultilineDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_MultilineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to strings for fuzzing, just ignore them.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a regex match to use to determine parts to fuzz. Replaces any matches within the selected range.
        /// </summary>
        internal static string RandomStringFuzzerNodeConfig_RegexMatchDescription {
            get {
                return ResourceManager.GetString("RandomStringFuzzerNodeConfig_RegexMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to replace values based on a regular expression.
        /// </summary>
        internal static string RegexMutatorNode_Description {
            get {
                return ResourceManager.GetString("RegexMutatorNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex Node.
        /// </summary>
        internal static string RegexMutatorNode_Name {
            get {
                return ResourceManager.GetString("RegexMutatorNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex.
        /// </summary>
        internal static string RegexMutatorNode_NodeName {
            get {
                return ResourceManager.GetString("RegexMutatorNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the match should be case sensitive.
        /// </summary>
        internal static string RegexMutatorNodeConfig_CaseSensitiveDescription {
            get {
                return ResourceManager.GetString("RegexMutatorNodeConfig_CaseSensitiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the match should ignore line breaks.
        /// </summary>
        internal static string RegexMutatorNodeConfig_MultiLineDescription {
            get {
                return ResourceManager.GetString("RegexMutatorNodeConfig_MultiLineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The regular expression to match on.
        /// </summary>
        internal static string RegexMutatorNodeConfig_RegexDescription {
            get {
                return ResourceManager.GetString("RegexMutatorNodeConfig_RegexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replacement string to use on match.
        /// </summary>
        internal static string RegexMutatorNodeConfig_ReplacementDescription {
            get {
                return ResourceManager.GetString("RegexMutatorNodeConfig_ReplacementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string encoding to use if the selected nodes are not strings.
        /// </summary>
        internal static string RegexMutatorNodeConfig_StringEncodingDescription {
            get {
                return ResourceManager.GetString("RegexMutatorNodeConfig_StringEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A replay endpoint which returns specifically tagged packets in a log in response to an incoming packet.
        /// </summary>
        internal static string ReplayByTagDataEndpoint_Description {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Replay by Tag Endpoint.
        /// </summary>
        internal static string ReplayByTagDataEndpoint_Name {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag Replay Endpoint.
        /// </summary>
        internal static string ReplayByTagDataEndpoint_NodeName {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpoint_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the packets are converted back to a basic byte form before sending.
        /// </summary>
        internal static string ReplayByTagDataEndpointConfig_ConvertToBasicDescription {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpointConfig_ConvertToBasicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log of packets to use when sending packets.
        /// </summary>
        internal static string ReplayByTagDataEndpointConfig_PacketsDescription {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpointConfig_PacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A set of replay entries which define the matching conditions and the tag to send.
        /// </summary>
        internal static string ReplayByTagDataEndpointConfig_ReplayEntriesDescription {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpointConfig_ReplayEntriesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag of packets to send on initial connection, if empty then no packets sent.
        /// </summary>
        internal static string ReplayByTagDataEndpointConfig_TagOnStartDescription {
            get {
                return ResourceManager.GetString("ReplayByTagDataEndpointConfig_TagOnStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a packet log.
        /// </summary>
        internal static string ReplayByTagDataServer_PacketLogIsNull {
            get {
                return ResourceManager.GetString("ReplayByTagDataServer_PacketLogIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to close the connection after sending the packets.
        /// </summary>
        internal static string ReplayByTagEntryFactory_CloseAfterSendDescription {
            get {
                return ResourceManager.GetString("ReplayByTagEntryFactory_CloseAfterSendDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of filters to apply to incoming packets to determine whether to send the packets.
        /// </summary>
        internal static string ReplayByTagEntryFactory_FiltersDescription {
            get {
                return ResourceManager.GetString("ReplayByTagEntryFactory_FiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates all filters must match.
        /// </summary>
        internal static string ReplayByTagEntryFactory_MatchAllFiltersDescription {
            get {
                return ResourceManager.GetString("ReplayByTagEntryFactory_MatchAllFiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of times to send the tagged packets.
        /// </summary>
        internal static string ReplayByTagEntryFactory_RepeatCountDescription {
            get {
                return ResourceManager.GetString("ReplayByTagEntryFactory_RepeatCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag to match to determine what packets to send.
        /// </summary>
        internal static string ReplayByTagEntryFactory_TagDescription {
            get {
                return ResourceManager.GetString("ReplayByTagEntryFactory_TagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to set the current node on the frame to a selected path.
        /// </summary>
        internal static string SelectorNode_Description {
            get {
                return ResourceManager.GetString("SelectorNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selector Node.
        /// </summary>
        internal static string SelectorNode_Name {
            get {
                return ResourceManager.GetString("SelectorNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selector.
        /// </summary>
        internal static string SelectorNode_NodeName {
            get {
                return ResourceManager.GetString("SelectorNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path name to select on.
        /// </summary>
        internal static string SelectorNodeConfig_PathName {
            get {
                return ResourceManager.GetString("SelectorNodeConfig_PathName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An endpoint which replays packets from a log sequentially on receiving .
        /// </summary>
        internal static string SequentialReplayEndpoint_Description {
            get {
                return ResourceManager.GetString("SequentialReplayEndpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequential Replay Endpoint.
        /// </summary>
        internal static string SequentialReplayEndpoint_Name {
            get {
                return ResourceManager.GetString("SequentialReplayEndpoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequential Replay.
        /// </summary>
        internal static string SequentialReplayEndpoint_NodeName {
            get {
                return ResourceManager.GetString("SequentialReplayEndpoint_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a packet log.
        /// </summary>
        internal static string SequentialReplayEndpoint_PacketLogIsNull {
            get {
                return ResourceManager.GetString("SequentialReplayEndpoint_PacketLogIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the connection is closed after sending all the packets.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_CloseAfterSendDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_CloseAfterSendDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the packets are converted back to a basic byte form before sending.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_ConvertToBasicDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_ConvertToBasicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a list of filters to filter out incoming packets for response.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_FiltersDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_FiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates all filters must match.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_MatchAllFiltersDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_MatchAllFiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log of packets to send when receiving an input packet.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_PacketsDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_PacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the number of times to send the packets.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_RepeatCountDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_RepeatCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to send a packet at connection start.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_SendAtStartDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_SendAtStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the tag to send, if not set then all packets will be sent.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_Tag {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_Tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true wait for a reponse before closing the connection if CloseOnSend is set.
        /// </summary>
        internal static string SequentialReplayEndpointConfig_WaitForResponseOnCloseDescription {
            get {
                return ResourceManager.GetString("SequentialReplayEndpointConfig_WaitForResponseOnCloseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to set a meta value when the node filters match.
        /// </summary>
        internal static string SetMetaStateNode_Description {
            get {
                return ResourceManager.GetString("SetMetaStateNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Meta Node.
        /// </summary>
        internal static string SetMetaStateNode_Name {
            get {
                return ResourceManager.GetString("SetMetaStateNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SetState.
        /// </summary>
        internal static string SetMetaStateNode_NodeName {
            get {
                return ResourceManager.GetString("SetMetaStateNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When UseSelection is true specify whether to convert the value to a string.
        /// </summary>
        internal static string SetMetaStateNodeConfig_ConvertSelectionToString {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_ConvertSelectionToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to set the value in the global or local state.
        /// </summary>
        internal static string SetMetaStateNodeConfig_Global {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_Global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the meta value to set.
        /// </summary>
        internal static string SetMetaStateNodeConfig_MetaName {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_MetaName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to set the value as private or public.
        /// </summary>
        internal static string SetMetaStateNodeConfig_Private {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset the specified meta value when a filter matches, depends on whether the value is already present.
        /// </summary>
        internal static string SetMetaStateNodeConfig_ResetStateOnMatch {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_ResetStateOnMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then will use the selection path to extract a value for the meta.
        /// </summary>
        internal static string SetMetaStateNodeConfig_UseSelection {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_UseSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value to set the meta to.
        /// </summary>
        internal static string SetMetaStateNodeConfig_Value {
            get {
                return ResourceManager.GetString("SetMetaStateNodeConfig_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple replay endpoint which returns specifically tagged packets in a log in response to an incoming packet.
        /// </summary>
        internal static string SimpleReplayByTagEndpoint_Description {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Replay by Tag Endpoint.
        /// </summary>
        internal static string SimpleReplayByTagEndpoint_Name {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag Replay Endpoint.
        /// </summary>
        internal static string SimpleReplayByTagEndpoint_NodeName {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpoint_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to close the connection after matching the filters and sending the packets.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_CloseAfterMatchDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_CloseAfterMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to close the connection after not matching the filters and sending the packets.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_CloseAfterNonMatchDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_CloseAfterNonMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the packets are converted back to a basic byte form before sending.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_ConvertToBasicDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_ConvertToBasicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of filters to apply to incoming packets to determine whether to send the packets.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_FiltersDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_FiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates all filters must match.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_MatchAllFiltersDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_MatchAllFiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log of packets to send.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_PacketsDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_PacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of times to send the on match packets.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_RepeatOnMatchDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_RepeatOnMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of times to send the on non-match packets.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_RepeatOnNonMatchDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_RepeatOnNonMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of times to send the start packets.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_RepeatOnStartDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_RepeatOnStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the packet tag to send when the filters match.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_TagOnMatchDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_TagOnMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the packet tag to send when the filters do not match.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_TagOnNonMatchDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_TagOnNonMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the packet tag to send when the endpoint starts, if empty then no packets sent.
        /// </summary>
        internal static string SimpleReplayByTagEndpointConfig_TagOnStartDescription {
            get {
                return ResourceManager.GetString("SimpleReplayByTagEndpointConfig_TagOnStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple replay endpoint which returns all packets in a log in response to an incoming packet.
        /// </summary>
        internal static string SimpleReplayDataEndpoint_Description {
            get {
                return ResourceManager.GetString("SimpleReplayDataEndpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Replay Endpoint.
        /// </summary>
        internal static string SimpleReplayDataEndpoint_Name {
            get {
                return ResourceManager.GetString("SimpleReplayDataEndpoint_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Replay Endpoint.
        /// </summary>
        internal static string SimpleReplayDataEndpoint_NodeName {
            get {
                return ResourceManager.GetString("SimpleReplayDataEndpoint_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a packet log.
        /// </summary>
        internal static string SimpleReplayDataEndpoint_PacketLogIsNull {
            get {
                return ResourceManager.GetString("SimpleReplayDataEndpoint_PacketLogIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to close after receiving a packet.
        /// </summary>
        internal static string SimpleReplayEndpointConfig_CloseAfterRecvDescription {
            get {
                return ResourceManager.GetString("SimpleReplayEndpointConfig_CloseAfterRecvDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to close the connection after sending the packets.
        /// </summary>
        internal static string SimpleReplayEndpointConfig_CloseAfterSendDescription {
            get {
                return ResourceManager.GetString("SimpleReplayEndpointConfig_CloseAfterSendDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true then the packets are converted back to a basic byte form before sending.
        /// </summary>
        internal static string SimpleReplayEndpointConfig_ConvertToBasicDescription {
            get {
                return ResourceManager.GetString("SimpleReplayEndpointConfig_ConvertToBasicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log of packets to send when receiving an input packet.
        /// </summary>
        internal static string SimpleReplayEndpointConfig_PacketsDescription {
            get {
                return ResourceManager.GetString("SimpleReplayEndpointConfig_PacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to also send the packets at connection start.
        /// </summary>
        internal static string SimpleReplayEndpointConfig_SendAtStartDescription {
            get {
                return ResourceManager.GetString("SimpleReplayEndpointConfig_SendAtStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to split a packet up based on a selection path into multiple packets.
        /// </summary>
        internal static string SplitterNode_Description {
            get {
                return ResourceManager.GetString("SplitterNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Splitter Node.
        /// </summary>
        internal static string SplitterNode_Name {
            get {
                return ResourceManager.GetString("SplitterNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Splitter.
        /// </summary>
        internal static string SplitterNode_NodeName {
            get {
                return ResourceManager.GetString("SplitterNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts byte data to a string in a specified encoding.
        /// </summary>
        internal static string StringConverterNode_Description {
            get {
                return ResourceManager.GetString("StringConverterNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String Converter.
        /// </summary>
        internal static string StringConverterNode_Name {
            get {
                return ResourceManager.GetString("StringConverterNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String Converter.
        /// </summary>
        internal static string StringConverterNode_NodeName {
            get {
                return ResourceManager.GetString("StringConverterNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binary encoding with which to process the string.
        /// </summary>
        internal static string StringConverterNodeConfig_EncodingDescription {
            get {
                return ResourceManager.GetString("StringConverterNodeConfig_EncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to strip out parts of a packet based on the selection path.
        /// </summary>
        internal static string StripperNode_Description {
            get {
                return ResourceManager.GetString("StripperNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stripper Node.
        /// </summary>
        internal static string StripperNode_Name {
            get {
                return ResourceManager.GetString("StripperNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stripper.
        /// </summary>
        internal static string StripperNode_NodeName {
            get {
                return ResourceManager.GetString("StripperNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify whether the output packet will include the selected nodes (set to false) or exclude them.
        /// </summary>
        internal static string StripperNodeConfig_ExclusiveDescription {
            get {
                return ResourceManager.GetString("StripperNodeConfig_ExclusiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node to fuzz parts of a string using a list of text values.
        /// </summary>
        internal static string TextListFuzzerNode_Description {
            get {
                return ResourceManager.GetString("TextListFuzzerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of random strings exceeded, try disabling comments or empty line handling.
        /// </summary>
        internal static string TextListFuzzerNode_MaxRandomCheckExceeded {
            get {
                return ResourceManager.GetString("TextListFuzzerNode_MaxRandomCheckExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text List Fuzzer Node.
        /// </summary>
        internal static string TextListFuzzerNode_Name {
            get {
                return ResourceManager.GetString("TextListFuzzerNode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text List Fuzzer.
        /// </summary>
        internal static string TextListFuzzerNode_NodeName {
            get {
                return ResourceManager.GetString("TextListFuzzerNode_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more text lines to fuzz.
        /// </summary>
        internal static string TextListFuzzerNode_NoMoreLines {
            get {
                return ResourceManager.GetString("TextListFuzzerNode_NoMoreLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the encoding to use if the nodes are not strings.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_BinaryEncodingDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_BinaryEncodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is casesensitive.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_CaseSensitiveDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_CaseSensitiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the log color to use.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_ColorDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_ColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a string which if matched at the beginning indicates a comment.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_CommentStringDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_CommentStringDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that logged packets should be converted to bytes before logging.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_ConvertToBytesDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_ConvertToBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a document to get fuzz text from, if specified will be combined with FuzzTextList.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_DocumentDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_DocumentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the length to fuzz from the start position, less than 0 means string.length - fuzzlength + 1.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_FuzzLengthDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_FuzzLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the starting string position to fuzz.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_FuzzStartDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_FuzzStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of fuzz text values.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_FuzzTextListDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_FuzzTextListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies that the fuzzer ignores empty lines in the documents.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_IgnoreEmptyLines {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_IgnoreEmptyLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the fuzzed value should be logged as text.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_LogFuzzTextDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_LogFuzzTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify that the packets are logged before and after fuzzing.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_LogPacketsDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_LogPacketsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the maximum number of replacements when using a regular expression, -1 means all.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_MaxReplacementsDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_MaxReplacementsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the regex is multiline.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_MultilineDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_MultilineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert nodes to strings for fuzzing, just ignore them.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_NoConversionDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_NoConversionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a regex match to use to determine parts to fuzz. Replaces any matches within the selected range.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_RegexMatchDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_RegexMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the text value at random.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_SelectRandomDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_SelectRandomDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store the current fuzz position as a local value, it will not persist between connections.
        /// </summary>
        internal static string TextListFuzzerNodeConfig_StoreLocalPositionDescription {
            get {
                return ResourceManager.GetString("TextListFuzzerNodeConfig_StoreLocalPositionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parses a binary WCF message into XML and converts it back again.
        /// </summary>
        internal static string WcfXmlMessage_Description {
            get {
                return ResourceManager.GetString("WcfXmlMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WCF Binary Parser.
        /// </summary>
        internal static string WcfXmlMessage_Name {
            get {
                return ResourceManager.GetString("WcfXmlMessage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WCF Binary.
        /// </summary>
        internal static string WcfXmlMessage_NodeName {
            get {
                return ResourceManager.GetString("WcfXmlMessage_NodeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not decode the input from binary data to XML.
        /// </summary>
        internal static string WcfXmlMessageConfig_NoDecodeDescription {
            get {
                return ResourceManager.GetString("WcfXmlMessageConfig_NoDecodeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not encode the output XML back to binary data.
        /// </summary>
        internal static string WcfXmlMessageConfig_NoEncodeDescription {
            get {
                return ResourceManager.GetString("WcfXmlMessageConfig_NoEncodeDescription", resourceCulture);
            }
        }
    }
}
